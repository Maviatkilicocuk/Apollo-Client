
type Location {
  id: ID!
  name: String!
  desc: String!
  lat: Float!
  lng: Float!
  events: [Event!]
}

input CreateLocationInput {
  name: String!
  desc: String!
  lat: Float!
  lng: Float!
}

input UpdateLocationInput {
  name: String
  desc: String
  lat: Float
  lng: Float
}

type Participant {
  id: ID!
  user: User!
  event: Event!
}

input CreateParticipantInput {
  user_id: ID!
  event_id: ID!
}

input UpdateParticipantInput {
  user_id: ID
  event_id: ID
}

type Query {
  locations: [Location!]!
  location(id: ID!): Location
  participants: [Participant!]!
  participant(id: ID!): Participant
}

type Mutation {
  addLocation(data: CreateLocationInput!): Location
  updateLocation(id: ID!, data: UpdateLocationInput!): Location
  deleteLocation(id: ID!): Location
  deleteAllLocations: [Location!]!
}

type Subscription {
  locationCreated: location!
  locationUpdated: location!
  locationDeleted: location!
}
