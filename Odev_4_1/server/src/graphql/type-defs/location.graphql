type Location {
  id: ID!
  name: String!
  desc: String!
  lat: Float!
  lng: Float!
  location_picture: String

  # Relations
  events: [Event!]!
}

input CreateLocationInput {
  name: String!
  desc: String!
  lat: Float!
  lng: Float!
  location_picture: String
}

input UpdateLocationInput {
  name: String
  desc: String
  lat: Float
  lng: Float
  location_picture: String
}

type DeleteAllOutput {
  count: Int!
}

type Query {
  locations: [Location!]!
  location(id: ID!): Location

}

type Mutation {
  createLocation(data: CreateLocationInput!): Location!
  updateLocation(id: ID!, data: UpdateLocationInput!): Location!
  deleteLocation(id: ID): Location!
  deleteAllLocation: DeleteAllOutput!
}

type Subscription {
  locationCreated: Location!
  locationUpdated: Location!
  locationDeleted: Location!
}
